Option Compare Database

Private Sub btnAddNew_Click()
On Error GoTo Stop_Err

    If Me.Dirty Then
        Me.Dirty = False
    End If
    
    DoCmd.OpenForm "frmRecordView"
    DoCmd.GoToRecord acForm, "frmRecordView", acNewRec
    Forms!frmRecordView.Auto_Header0.Caption = "Add New Record"
    DoCmd.Close acForm, "frmRecordSearch"

Stop_Exit:
    Exit Sub

Stop_Err:
    MsgBox Err.Number & ":  " & Err.Description
    Resume Stop_Exit
    Resume
End Sub

Private Sub btnClearSearch_Click()

    Dim strSQL As String
    
    strSQL = "SELECT tblSafeActData.ID, tblSafeActData.EmpID, tblSafeActData.EmployeeName, tblSafeActData.MLONumber, tblSafeActData.TPEStatus, " & _
                "tblSafeActData.TPEGroup, tblSafeActData.TPEDate, tblSafeActData.InitialDateNotified, tblSafeActData.NotifiedByHR, " & _
                "tblSafeActData.VerificationDeadlineDate, tblSafeActData.CurrentBranch, tblSafeActData.ToBranch, " & _
                "tblSafeActData.ComplianceTechName " & _
                "FROM tblSafeActData " & _
                "WHERE (((tblSafeActData.ID)=0));"

    'clear search fields
    Me.txtRecordID = vbNullString
    Me.txtEmpID = vbNullString
    Me.txtEmployeeName = vbNullString
    Me.txtMLONumber = vbNullString
    Me.cboEmployeeStatus = vbNullString
    Me.cboEmployeeGroup = vbNullString
    Me.txtTPEDate = vbNullString
    Me.txtInitialDateNotified = vbNullString
    Me.txtVerificationDeadlineDate = vbNullString
    Me.cboCurrentBranch = vbNullString
    Me.cboToBranch = vbNullString
    Me.cboTechName = vbNullString

    'reset subform record source
    Me.frmRecordSearch_Sub.Form.RecordSource = strSQL
    
End Sub

Private Sub btnMainMenu_Click()
On Error GoTo Stop_Err

    DoCmd.OpenForm "frm_MainMenu"
    DoCmd.Close acForm, "frmRecordSearch"

Stop_Exit:
    Exit Sub

Stop_Err:
    MsgBox Err.Number & ":  " & Err.Description
    Resume Stop_Exit
    Resume
End Sub

Private Sub btnSearchRecords_Click()

    Dim strSQL As String
    Dim strSQL_WHERE As String
    
    
    'set base sql select statement
    strSQL = "SELECT tblSafeActData.ID, tblSafeActData.EmpID, tblSafeActData.EmployeeName, tblSafeActData.MLONumber, " & _
                    "tblSafeActData.TPEStatus, tblSafeActData.TPEGroup, tblSafeActData.TPEDate, tblSafeActData.InitialDateNotified_HR, " & _
                    "tblSafeActData.InitialDateNotified_LO, tblSafeActData.VerificationDeadlineDate, tblSafeActData.CurrentBranch, tblSafeActData.ToBranch, " & _
                    "tblSafeActData.ComplianceTechName " & _
                "FROM tblSafeActData " & _
                "WHERE "

    'piece together where clause based on populated search fields
    If Len(Me.txtRecordID & vbNullString) > 0 Then
        strSQL_WHERE = strSQL_WHERE & "AND ((tblSafeActData.ID)=" & Me.txtRecordID & ") "
    End If
    
    If Len(Me.txtEmpID & vbNullString) > 0 Then
        strSQL_WHERE = strSQL_WHERE & " AND ((tblSafeActData.EmpID)=" & Me.txtEmpID & ") "
    End If
    
    If Len(Me.txtEmployeeName & vbNullString) > 0 Then
        strSQL_WHERE = strSQL_WHERE & "AND ((tblSafeActData.EmployeeName) Like '*" & Me.txtEmployeeName & "*')"
    End If
    
    If Len(Me.txtMLONumber & vbNullString) > 0 Then
        strSQL_WHERE = strSQL_WHERE & "AND ((tblSafeActData.MLONumber)=" & Me.txtMLONumber & ") "
    End If
    
    If Len(Me.cboEmployeeStatus & vbNullString) > 0 Then
        strSQL_WHERE = strSQL_WHERE & "AND ((tblSafeActData.TPEStatus)='" & Me.cboEmployeeStatus & "') "
    End If
    
    If Len(Me.cboEmployeeGroup & vbNullString) > 0 Then
        strSQL_WHERE = strSQL_WHERE & "AND ((tblSafeActData.TPEGroup) Like '" & Me.cboEmployeeGroup & "')"
    End If
    
    If Len(Me.txtTPEDate & vbNullString) > 0 Then
        strSQL_WHERE = strSQL_WHERE & "AND ((tblSafeActData.TPEDate)=#" & Me.txtTPEDate & "#)"
    End If
    
    If Len(Me.txtInitialDateNotified & vbNullString) > 0 Then
        strSQL_WHERE = strSQL_WHERE & "AND ((tblSafeActData.InitialDateNotified)=#" & Me.txtInitialDateNotified & " #)"
    End If
    
    If Len(Me.txtVerificationDeadlineDate & vbNullString) > 0 Then
        strSQL_WHERE = strSQL_WHERE & "AND ((tblSafeActData.VerificationDeadlineDate) between #" & Date - 7 & "# AND #" & Me.txtVerificationDeadlineDate & " #)"
    End If
    
    If Len(Me.cboCurrentBranch & vbNullString) > 0 Then
        strSQL_WHERE = strSQL_WHERE & "AND ((tblSafeActData.CurrentBranch)=" & Me.cboCurrentBranch & ") "
    End If
    
    If Len(Me.cboToBranch & vbNullString) > 0 Then
        strSQL_WHERE = strSQL_WHERE & "AND ((tblSafeActData.ToBranch)=" & Me.cboToBranch & ") "
    End If
    
    If Len(Me.cboTechName & vbNullString) > 0 Then
        strSQL_WHERE = strSQL_WHERE & "AND ((tblSafeActData.ComplianceTechName)='" & Me.cboTechName & "') "
    End If
    
    
    If Len(strSQL_WHERE & vbNullString) > 0 Then
        'remove extra "AND " from beginning of WHERE clause
        strSQL_WHERE = Mid(strSQL_WHERE, 5)
        'piece together SELECT statement and WHERE clause
        strSQL = strSQL & strSQL_WHERE & "ORDER BY tblSafeActData.ID DESC;"
    Else
        MsgBox "Please enter at least one search parameter!"
        Exit Sub
    End If
    
    'update subform record source
    Me.frmRecordSearch_Sub.Form.RecordSource = strSQL
   
   'notify user if no records are found
   Me.txtRecordCount.SetFocus
    If Me.txtRecordCount.Text = "0" Then
        MsgBox "Your search did not return any maching records!", vbInformation
    End If
    Me.btnSearchRecords.SetFocus

End Sub


Private Sub cboEmpID_BeforeUpdate(Cancel As Integer)

    If Len(Me.txtEmpID & vbNullString) > 0 Then
        If Not IsNumeric(Me.txtEmpID) Then
            MsgBox "Employee ID must be numeric!"
            Cancel = True
        End If
    End If

End Sub

Private Sub Form_Current()
    
    Me.txtEmployeeName.SetFocus
    
End Sub

Private Sub txtInitialDateNotified_BeforeUpdate(Cancel As Integer)

    If Len(Me.txtInitialDateNotified & vbNullString) > 0 Then
        If Not IsDate(Me.txtInitialDateNotified) Then
            MsgBox "Please enter a valid date!"
            Cancel = True
        End If
    End If


End Sub

Private Sub txtMLONumber_BeforeUpdate(Cancel As Integer)

    If Len(Me.txtMLONumber & vbNullString) > 0 Then
        If Not IsNumeric(Me.txtMLONumber) Then
            MsgBox "MLO Number must be numeric!"
            Cancel = True
        End If
    End If

End Sub

Private Sub txtRecordID_BeforeUpdate(Cancel As Integer)

    If Len(Me.txtRecordID & vbNullString) > 0 Then
        If Not IsNumeric(Me.txtRecordID) Then
            MsgBox "Record ID must be numeric!"
            Cancel = True
        End If
    End If

End Sub

Private Sub txtTPEDate_BeforeUpdate(Cancel As Integer)

    If Len(Me.txtTPEDate & vbNullString) > 0 Then
        If Not IsDate(Me.txtTPEDate) Then
            MsgBox "Please enter a valid date!"
            Cancel = True
        End If
    End If

End Sub

Private Sub txtVerificationDeadlineDate_BeforeUpdate(Cancel As Integer)

    If Len(Me.txtVerificationDeadlineDate & vbNullString) > 0 Then
        If Not IsDate(Me.txtVerificationDeadlineDate) Then
            MsgBox "Please enter a valid date!"
            Cancel = True
        End If
    End If

End Sub
